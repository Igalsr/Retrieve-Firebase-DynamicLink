 // GENERATE DYNAMIC LINK
 
    private void shareDynamicLink() {

// Create key you can identify later 
        String tutorialRef = mWatchKey + "/" + mTutorialKey;

// Put the key in the long link
        String longLink =
                "https://dugitsupport.page.link/?link=https://www.dugit.co.il/suunto-tutorials/"
                        +  tutorialRef
                        + "&apn=il.co.solvi.suuntosupportisrael"                                 // App Package name
                        + "&ofl=https://www.dugit.co.il/suunto-tutorials/"
                        + "&ifl=https://www.dugit.co.il/suunto-tutorials/"
                        + "&st=title of link"
                        + "&sd=subtitle for link"
                        + "&si=https://image.ibb.co/icon_for_link.png";

        Log.d(TAG, "shareLink: " + longLink);

// Using Firebase dynamic links package create a dynamic link-

        Task<ShortDynamicLink> shortDynamicLinkTask =
                FirebaseDynamicLinks.getInstance().createDynamicLink()
                .setLongLink(Uri.parse(longLink))
                .buildShortDynamicLink()
                .addOnCompleteListener(TutorialSingleActivity.this, new OnCompleteListener<ShortDynamicLink>() {
                    @Override
                    public void onComplete(@NonNull Task<ShortDynamicLink> task) {

                        if (task.isSuccessful()){

                            Uri shortLink = task.getResult().getShortLink();
                            String shortString = shortLink.toString();

// Intent to share the link you created 

                            Intent shareIntent = new Intent(Intent.ACTION_SEND);
                            shareIntent.setType("text/plain");
                            shareIntent.putExtra(Intent.EXTRA_SUBJECT, "Deep Link");
                            shareIntent.putExtra(Intent.EXTRA_TEXT, shortString);
                            startActivity(Intent.createChooser(shareIntent, "Share with..."));

                        } else {

                            task.addOnFailureListener(new OnFailureListener() {
                                @Override
                                public void onFailure(@NonNull Exception e) {

                                    Log.d(TAG, "onFailure: " + e.toString());

                                }
                            });

                            Toast.makeText(TutorialSingleActivity.this, "Try Again later...",
                                    Toast.LENGTH_LONG).show();
                        }
                    }
                });
    }

 
 // Receive Dynamic Link
    private void receiveLink() {

        FirebaseDynamicLinks.getInstance()
                .getDynamicLink(getIntent())
                .addOnSuccessListener(this, new OnSuccessListener<PendingDynamicLinkData>() {
                    @Override
                    public void onSuccess(PendingDynamicLinkData pendingDynamicLinkData) {
                        // Get deep link from result (may be null if no link is found)
                        Uri deepLink = null;
                        if (pendingDynamicLinkData != null) {

                            deepLink = pendingDynamicLinkData.getLink();
                            String result = deepLink.toString();
                            Log.d(TAG, "dynamicLink: " + result);

                            // REPLACE THE STATIC URL AND GET ONLY THE PART OF THE URL I NEED TO IDENTIFY THE TARGET PAGE
                            String partialReference = result.replace("https://www.dugit.co.il/suunto-tutorials/", "");

                            if (TextUtils.isEmpty(partialReference)){

                                Log.d(TAG, "General Dynamic Link");

                            } else {

                                String reference = "Tutorials/" + partialReference;
                                String[] parts = partialReference.split("/");
                                String tutorialFamily = parts[0];
                                String tutorialKey = parts[1];

                                Log.d(TAG, "DYNAMIC_LINK: " + reference);
                                Log.d(TAG, "FAMILY: " + tutorialFamily);
                                Log.d(TAG, "KEY: " + tutorialKey);

                                DatabaseReference tutRef = FirebaseDatabase.getInstance().getReference(reference);
                                tutRef.addListenerForSingleValueEvent(new ValueEventListener() {
                                    @Override
                                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {

                                        Tutorial tutorial = dataSnapshot.getValue(Tutorial.class);

                                        if (tutorial != null){

                                            Intent tutorialIntent = new Intent(MainActivity.this, TutorialSingleActivity.class);
                                            tutorialIntent.putExtra("TUTORIAL_PARCEL", Parcels.wrap(tutorial));
                                            tutorialIntent.putExtra("WATCH_FAMILY", tutorialFamily);
                                            tutorialIntent.putExtra("TUTORIAL_KEY", tutorialKey);
                                            startActivity(tutorialIntent);
                                        }
                                    }

                                    @Override
                                    public void onCancelled(@NonNull DatabaseError databaseError) {

                                    }
                                });
                            }
                        }
                    }

                }).addOnFailureListener(this, new OnFailureListener() {
                    @Override
                    public void onFailure(@NonNull Exception e) {
                        Log.w(TAG, "getDynamicLink:onFailure", e);
                    }
                });
    }
    
    
